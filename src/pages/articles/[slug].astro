---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/SiteBaseLayout.astro";

export async function getStaticPaths() {
  const articleEntries = await getCollection("article");

  return articleEntries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

const date = Intl.DateTimeFormat("ja-JP", { dateStyle: "short" }).format(
  entry.data.date,
);

const image = entry.data.image.startsWith("http")
  ? entry.data.image
  : Astro.url.origin + entry.data.image;
---

<Layout
  title={entry.data.title}
  description={entry.data.description}
  image={image}
>
  <main class="mb-20 md:mt-20">
    <div class="relative max-w-5xl mx-auto">
      <img
        src={entry.data.image}
        alt=""
        fetchpriority="high"
        class="w-full h-auto aspect-video object-cover"
      />
      <div
        class="mt-4 text-neutral-900 dark:text-neutral-100 backdrop-blur-sm md:text-neutral-100 md:bg-neutral-800/70 md:absolute md:top-1/4 md:right-0 md:py-4 md:m-0 md:w-10/12 px-6"
      >
        <h1 class="text-2xl/relaxed font-bold md:w-3/4 md:text-3xl/relaxed">
          {entry.data.title}
        </h1>
        <p class="text-base mt-4 text-right md:text-xl">
          <span>by 37108</span>
          <span class="ml-4">at {date}</span>
        </p>
      </div>
    </div>
    <nav class="mt-16 mx-auto max-w-3xl px-6 lg:px-10">
      <h2 class="text-2xl text-neutral-900 dark:text-neutral-100">
        Table of contents
      </h2>
      <ul class="mt-6 text-neutral-700 dark:text-neutral-300">
        {
          headings.map((item) => (
            <li
              class="list-disc text-base/loose hover:underline"
              style={{ marginLeft: `${1.25 * item.depth}rem` }}
            >
              <a href={`#${item.slug}`}>{item.text}</a>
            </li>
          ))
        }
      </ul>
    </nav>
    <article
      class="article px-6 lg:px-10 mx-auto mt-20 max-w-3xl space-y-6 text-base/7 text-neutral-900 dark:text-neutral-100"
    >
      <Content />
    </article>

    {
      entry.data.tags && (
        <ul class="flex gap-6 flex-wrap mt-16 max-w-3xl mx-auto  text-base text-neutral-900 dark:text-neutral-100 px-6 lg:px-10">
          {entry.data.tags.map((tag) => (
            <li>
              <a
                href={`/articles/${tag}`}
                class="flex items-center gap-0.5 hover:opacity-60"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 16 16"
                  fill="currentColor"
                  class="w-4 h-4 mt-0.5"
                >
                  <path
                    fill-rule="evenodd"
                    d="M7.487 2.89a.75.75 0 1 0-1.474-.28l-.455 2.388H3.61a.75.75 0 0 0 0 1.5h1.663l-.571 2.998H2.75a.75.75 0 0 0 0 1.5h1.666l-.403 2.114a.75.75 0 0 0 1.474.28l.456-2.394h2.973l-.403 2.114a.75.75 0 0 0 1.474.28l.456-2.394h1.947a.75.75 0 0 0 0-1.5h-1.661l.57-2.998h1.95a.75.75 0 0 0 0-1.5h-1.664l.402-2.108a.75.75 0 0 0-1.474-.28l-.455 2.388H7.085l.402-2.108ZM6.8 6.498l-.571 2.998h2.973l.57-2.998H6.8Z"
                    clip-rule="evenodd"
                  />
                </svg>

                <span>{tag}</span>
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </main>
</Layout>

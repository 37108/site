---
import { ViewTransitions } from "astro:transitions";
import Analytics from "../components/Analytics.astro";

export interface Props {
  title: string;
  description: string;
  image: string;
}

const { title, description, image } = Astro.props;
---

<!doctype html>
<html lang="ja" class="scroll-smooth">
  <head>
    <ViewTransitions />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <Analytics />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="canonical" href={Astro.url} />
    <meta name="description" content={description} />

    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta name="twitter:card" content="summary" />
  </head>
  <body
    class="bg-neutral-100 dark:bg-neutral-800 min-h-screen transition-colors duration-300"
  >
    <slot />
    <style is:global>
      html {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-feature-settings: "palt" 1;
      }
    </style>
    <script is:inline>
      function setup() {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
          localStorage.theme = "dark";
        } else {
          document.documentElement.classList.remove("dark");
          localStorage.theme = "light";
        }
      }
      setup();
      document.addEventListener("astro:after-swap", setup);
    </script>
  </body>
</html>
